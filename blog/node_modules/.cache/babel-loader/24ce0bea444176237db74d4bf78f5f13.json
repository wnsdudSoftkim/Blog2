{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blog\\\\blog\\\\src\\\\component\\\\PostPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Header from './Header.js';\nimport twitter from './image/twitter.PNG';\nimport instablack from './image/instablack.PNG';\nimport facebook from './image/facebook.PNG';\nconst fetchURL = 'http://localhost:5000/getPost';\n\nfunction PostPage({\n  match\n}) {\n  const [items, SetItems] = useState();\n  const [input, SetInput] = useState({\n    title: '',\n    body: ''\n  });\n  const {\n    title,\n    body\n  } = input;\n  useEffect(() => {\n    axios.post(fetchURL).then(res => {\n      console.log(res);\n      SetItems(res.data);\n\n      if (res.data._id === match.params.id) {\n        console.log(res.data._id);\n      }\n    });\n  }, []);\n\n  const getData = () => {\n    items.map(item => {\n      if (item._id === match.params.id) {\n        SetInput({ ...input,\n          title: item.title,\n          body: item.body\n        });\n      }\n    });\n  };\n\n  const PostPageBlock = styled.div`\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        width:100%;\n        background:white;\n        box-shadow: 0px -2px -4px 4px #eee;\n\n        .PageBlock {\n            width:768px;\n            @media(max-width:767px) {\n                width:512px\n            }\n            display:flex;\n            flex-direction:column;\n            .title {\n                .itemTitle {\n                    color:rgba(0,0,0,0.84);\n                    margin:0;\n                    font-size:30px;\n                    line-height:40px;\n                    font-weight:400;\n                }\n                .Logo {\n                    display:flex;\n                    .twitter {\n                        width:20px;\n                        height:20px;\n                    }\n                    \n                }\n            }\n            .body {\n\n            }\n        }\n    `;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PostPageBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, items ? items.map(item => {\n    if (item._id === match.params.id) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PageBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"itemTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }\n      }, item.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"twitter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        size: \"10\",\n        src: instablack,\n        alt: \"\\uC778\\uC2A4\\uD0C0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 49\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }, body));\n    }\n  }) : \"Loading\"));\n}\n\nexport default PostPage;","map":{"version":3,"sources":["D:/Blog/blog/src/component/PostPage.js"],"names":["React","useState","useEffect","styled","axios","Header","twitter","instablack","facebook","fetchURL","PostPage","match","items","SetItems","input","SetInput","title","body","post","then","res","console","log","data","_id","params","id","getData","map","item","PostPageBlock","div"],"mappings":"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","sourcesContent":["import React , {useState,useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport Header from './Header.js'\r\nimport twitter from './image/twitter.PNG'\r\nimport instablack from './image/instablack.PNG'\r\nimport facebook from './image/facebook.PNG'\r\nconst fetchURL = 'http://localhost:5000/getPost'\r\n\r\nfunction PostPage({match}) {\r\n    const [items,SetItems] = useState()\r\n    const [input,SetInput] = useState({title:'',body:''})\r\n    const {title,body} = input\r\n\r\n    useEffect(()=> {\r\n        axios.post(fetchURL).then(res=> {\r\n            console.log(res)\r\n            SetItems(res.data)\r\n            if(res.data._id === match.params.id) {\r\n                console.log(res.data._id)\r\n            }\r\n        })\r\n    },[])\r\n    \r\n    const getData = () => {\r\n        items.map(item=> {\r\n            if(item._id === match.params.id){\r\n                SetInput({\r\n                    ...input,\r\n                    title:item.title,\r\n                    body:item.body\r\n                })\r\n            } \r\n        })\r\n    }\r\n    const PostPageBlock = styled.div`\r\n        display:flex;\r\n        justify-content:center;\r\n        align-items:center;\r\n        width:100%;\r\n        background:white;\r\n        box-shadow: 0px -2px -4px 4px #eee;\r\n\r\n        .PageBlock {\r\n            width:768px;\r\n            @media(max-width:767px) {\r\n                width:512px\r\n            }\r\n            display:flex;\r\n            flex-direction:column;\r\n            .title {\r\n                .itemTitle {\r\n                    color:rgba(0,0,0,0.84);\r\n                    margin:0;\r\n                    font-size:30px;\r\n                    line-height:40px;\r\n                    font-weight:400;\r\n                }\r\n                .Logo {\r\n                    display:flex;\r\n                    .twitter {\r\n                        width:20px;\r\n                        height:20px;\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            .body {\r\n\r\n            }\r\n        }\r\n    `\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <PostPageBlock>\r\n                {items\r\n                    ? items.map(item => {\r\n                        if(item._id===match.params.id) {\r\n                            return (\r\n                                <div className=\"PageBlock\">\r\n                                    <div className=\"title\">\r\n                                        <h1 className=\"itemTitle\">\r\n                                            {item.title}\r\n                                        </h1>\r\n                                        <div className =\"Logo\">\r\n                                            <p className=\"twitter\">\r\n                                                <img size =\"10\" src={instablack} alt=\"인스타\" />\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"body\">\r\n                                        {body}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })\r\n                    : \"Loading\"\r\n                }\r\n            </PostPageBlock>\r\n\r\n\r\n        </>\r\n        \r\n    )   \r\n}\r\n\r\nexport default PostPage"]},"metadata":{},"sourceType":"module"}